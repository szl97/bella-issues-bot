[
  {
    "file_name": "examples/example_log_manager.py",
    "content": "diff\n--- examples/example_log_manager.py\n+++ examples/example_log_manager.py\n@@ -62,7 +62,27 @@\n     # 示例提示和响应\n     sys_prompt = \"你是一个代码助手，帮助用户解决编程问题。\"\n     user_prompt = \"请帮我实现一个简单的Python函数，用于计算两个数的最大公约数。\"\n-    ai_response = \"\"\"\n+    ai_response = \"\"\"\n+    以下是计算最大公约数的Python函数:\n+    \n+    \n",
    "file_content": "\"\"\"\n这个示例展示如何使用LogManager进行日志管理，包括初始化、存档日志、检索日志和回滚操作\n\"\"\"\nimport os\nimport sys\nfrom typing import List\n\n# 添加项目根目录到sys.path，确保可以导入core模块\nsys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), \"..\")))\n\nfrom core.diff import DiffInfo\nfrom core.log_manager import LogManager, LogConfig, LogEntry\nfrom core.log_config import setup_logging\n\n\ndef print_separator(title: str):\n    \"\"\"打印分隔线和标题，使输出更易读\"\"\"\n    print(\"\\n\" + \"=\" * 50)\n    print(f\"  {title}\")\n    print(\"=\" * 50)\n\n\ndef display_log_entries(entries: List[LogEntry]):\n    \"\"\"显示日志条目的主要信息\"\"\"\n    for entry in entries:\n        print(f\"轮次 {entry.round_num} - {entry.timestamp}\")\n        print(f\"  系统提示词 (前30字符): {entry.sys_prompt[:30]}...\")\n        print(f\"  用户提示词 (前30字符): {entry.prompt[:30]}...\")\n        print(f\"  响应内容 (前30字符): {entry.response[:30]}...\")\n        print(f\"  修改的文件数量: {len(entry.modified_files)}\")\n        print(\"---\")\n\n\ndef main():\n    \"\"\"示例主函数，展示LogManager的各种用法\"\"\"\n    # 设置日志\n    setup_logging()\n    \n    # 创建工作目录 - 使用当前项目根目录\n    project_dir = os.path.abspath(os.path.join(os.path.dirname(__file__), \"..\"))\n    issue_id = 999  # 使用一个示例issue_id\n    \n    print_separator(\"1. 初始化LogManager\")\n    # 初始化LogManager\n    log_config = LogConfig(\n        project_dir=project_dir,\n        issue_id=issue_id,\n        mode=\"client\"  # 客户端模式\n    )\n    log_manager = LogManager(config=log_config)\n    \n    print(f\"LogManager已初始化，当前轮次: {log_manager.get_current_round()}\")\n    print(f\"日志路径: {log_manager.logs_path}\")\n    print(f\"Issue日志路径: {log_manager.issues_path}\")\n    \n    # 创建示例数据\n    print_separator(\"2. 存档日志\")\n    \n    # 示例提示和响应\n    sys_prompt = \"你是一个代码助手，帮助用户解决编程问题。\"\n    user_prompt = \"请帮我实现一个简单的Python函数，用于计算两个数的最大公约数。\"\n    ai_response = \"\"\"\n    以下是计算最大公约数的Python函数:\n    \n    \n    ",
    "is_create": false,
    "is_modify": true,
    "is_delete": false
  }
]